<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.decision.v2x.dcm.mapper.CertificationMapper">


	<select id="selectKey" resultType="deviceAndCertListVO" parameterType="String">
		select * 
		from DeviceAndCertList
		where cert_id = #{0}	
	</select>

	<select id="selectEnrolCheck" resultType="int" parameterType="deviceVO">
		select count(cert_id) 
		from DeviceAndCertList
		where device_id = #{device_id} and mapping = 'Y'
	</select>

	<update id="updateChangeStateCert" parameterType="certificationVO">
		update certifications
		set cert_state = #{cert_state}, 
			cert_state_group_id = #{cert_state_group_id}
		where cert_id = #{cert_id}
	
	</update>

	<select id="getEnrolSetting" resultType="String">
		select setting
		from cert_setting
		where cert_type_code = '3' and cert_type_code_group = 'ECG028'
	</select>
	<select id="getIdeSetting" resultType="String">
		select setting
		from cert_setting
		where cert_type_code = '2' and cert_type_code_group = 'ECG028'
	</select>
	<select id="getPseSetting" resultType="String">
		select setting
		from cert_setting
		where cert_type_code = '1' and cert_type_code_group = 'ECG028'
	</select>
	<select id="getAppSetting" resultType="String">
		select setting
		from cert_setting
		where cert_type_code = '4' and cert_type_code_group = 'ECG028'
	</select>
	<select id="getInfraSetting" resultType="String">
		select setting
		from cert_setting
		where cert_type_code = '5' and cert_type_code_group = 'ECG028'
	</select>


	<update id="updateDeviceCertType" parameterType="deviceVO">
		update devices
		set device_cert_type = #{device_cert_type}
		where device_id = #{device_id}
	</update>
	
	<update id="deleteCertIssue" parameterType="String">
		update certifications
		set issue_date = null,
			expiry_date = null,
			use_yn = 'N'
		where cert_id = #{cert_id}
	</update>

	<select id="selectDeviceType" resultType="map" parameterType="deviceVO">
		select device_type, device_type_group, device_sec_type, device_sec_type_group 
		from devices
		where device_id = #{device_id}
		
		<if test="device_sn != null and device_sn != ''">
				AND
		<![CDATA[ device_sn = #{device_sn} ]]>
			</if>
	</select>


	<select id="selectCertType" resultType="map">
		select code_id, code_group_id, code_description
		from CodeList 
		where code_group_id = 'ECG028' and code_id != 3 and code_id != 5;
	</select>

	<!-- 보안인증서 목록	--> 
	<select id="selectMakeCertList" resultType="map" parameterType="deviceAndCertListVO">
		SELECT data.* 
		FROM (select 
				mapping, 
				if(cert_id is null, '-', cert_id) as 'cert_id', 
				device_id, 
				device_create_id, 
				device_sn, 
				if(issue_date is null, if(nf_issue_date is null, '-', nf_issue_date), issue_date) 'issue_date',
				if(expiry_date is null, if(nf_expiry_date is null, '-', nf_expiry_date), expiry_date) 'expiry_date', 
				device_create_date, 
				if(device_modify_date is null, '-', device_modify_date) 'device_modify_date', 
				if(cert_state_name is null, '-', cert_state_name) 'cert_state_name', 
				cert_state_description, 
				cert_state_id, 
				cert_state_group, 
				cert_type_name, 
				if(cert_type_descrtion is null, '미발급', cert_type_descrtion) 'cert_type_descrtion', 
				cert_type_id, 
				cert_type_group, (
					select code_description
					from CodeList
			        where code_id = device_type and code_group_id = device_type_group
				) as 'device_type_descrption', 
				device_sn_type_description,
				if(cert_create_id is null, '-', cert_create_id) as 'cert_create_id',
				use_yn,
                device_cert_type
			FROM DeviceAndCertListEx 
			WHERE 1=1 
				<choose>
					<when test='issueYn.equals("Y")'>
		<![CDATA[ AND (mapping = 'Y' and device_cert_type ='M') ]]>
					</when>
					
					<when test='issueYn.equals("N")'>
		<![CDATA[ AND (mapping = 'N' and (device_cert_type is null or device_cert_type = '')) ]]>
					</when>
					
					<otherwise>
		<![CDATA[ AND (device_cert_type is null or device_cert_type = '' or device_cert_type ='M') ]]>
					</otherwise>
				</choose>
			
			<if test="issue_date_start != null and issue_date_start != ''">
				AND
		<![CDATA[ issue_date >= #{issue_date_start} and issue_date <= #{issue_date_end} ]]>
			</if>
	
			<if test="expire_date_start != null and expire_date_start != ''">
				AND
		<![CDATA[ expiry_date >= #{expire_date_start} and expiry_date <= #{expire_date_end} ]]>
			</if>
			
			<if test="device_sn != null and device_sn != ''">
				AND
		<![CDATA[ device_sn like concat('%', #{device_sn}, '%') ]]>
			</if>
			
			<if test="cert_type_id != null and cert_type_id != ''">
				AND
		<![CDATA[ cert_type_id = #{cert_type_id} and cert_type_group = #{cert_type_group} ]]>
			</if>
			
			<if test="device_sn_type_id != null and device_sn_type_id != ''">
				AND
		<![CDATA[ device_sn_type_id = #{device_sn_type_id} and device_sn_type_group = #{device_sn_type_group} ]]>
			</if>
			
			) data
		LIMIT #{page}, #{page_per_data}
	</select>
	<select id="selectMakeCertCnt" resultType="map" parameterType="deviceAndCertListVO">
		SELECT count(device_id) as 'totalCnt', TRUNCATE(count(*) / #{page_per_data}, 0) + 1 as 'totalPageCnt'
		FROM DeviceAndCertListEx 
		WHERE  1=1 
				<choose>
					<when test='issueYn.equalsIgnoreCase("Y")'>
		<![CDATA[ AND (mapping = 'Y' and device_cert_type ='M') ]]>
					</when>
					
					<when test='issueYn.equalsIgnoreCase("N")'>
		<![CDATA[ AND (mapping = 'N' and (device_cert_type is null or device_cert_type = '')) ]]>
					</when>
					
					<otherwise>
		<![CDATA[ AND (device_cert_type is null or device_cert_type = '' or device_cert_type ='M') ]]>
					</otherwise>
				</choose>
		
			<if test="issue_date_start != null and issue_date_start != ''">
				AND
		<![CDATA[ issue_date >= #{issue_date_start} and issue_date <= #{issue_date_end} ]]>
			</if>
	
			<if test="expire_date_start != null and expire_date_start != ''">
				AND
		<![CDATA[ expiry_date >= #{expire_date_start} and expiry_date <= #{expire_date_end} ]]>
			</if>
			
			<if test="device_sn != null and device_sn != ''">
				AND
		<![CDATA[ device_sn like concat('%', #{device_sn}, '%') ]]>
			</if>
			
			<if test="cert_type_id != null and cert_type_id != ''">
				AND
		<![CDATA[ cert_type_id = #{cert_type_id} and cert_type_group = #{cert_type_group} ]]>
			</if>
			
			<if test="device_sn_type_id != null and device_sn_type_id != ''">
				AND
		<![CDATA[ device_sn_type_id = #{device_sn_type_id} and device_sn_type_group = #{device_sn_type_group} ]]>
			</if>
				
	</select>

	<!-- 등록인증서 목록-->
	<!--
	<select id="selectEnrolCertList" resultType="map" parameterType="deviceAndCertListVO">
		SELECT data.*
		FROM ( select *
        from ( select
				mapping, 
				cert_id, 
				device_id, 
				device_create_id, 
				device_sn, 
				if(issue_date is null, if(nf_issue_date is null, '-', nf_issue_date), issue_date) 'issue_date',
				if(expiry_date is null, if(nf_expiry_date is null, '-', nf_expiry_date), expiry_date) 'expiry_date', 
				device_create_date, 
				if(device_modify_date is null, '-', device_modify_date) 'device_modify_date', 
				if(cert_state_name is null, '-', cert_state_name) 'cert_state_name', 
                if(use_yn is null, 'Y', use_yn) 'cert_use_yn', 
				cert_state_description, 
				cert_state_id, 
				cert_state_group, 
				cert_type_name, 
				cert_type_descrtion, 
				cert_type_id, 
				cert_type_group, 
				cert_create_id,
				device_type,
                device_type_group,
                device_sn_type_id,
                device_sn_type_group,
				device_sn_type_description, (
					select code_description
					from CodeList
			        where code_id = device_type and code_group_id = device_type_group
				) as 'device_type_descrption',
                device_cert_type,
				(CASE
					WHEN device_cert_type = 'M' 
					THEN '보안인증서 발급'
					WHEN device_cert_type is null or device_cert_type = ''
					THEN '미발급'
					WHEN device_cert_type = 'U' and use_yn = 'N'
					THEN '미발급'
			        WHEN device_cert_type = 'U'
					THEN '등록인증서 발급'
				END) AS cert_condition
			FROM DeviceAndCertList
            ) d
            where d.cert_use_yn = 'Y' and d.device_cert_type != 'M'
			<if test="issue_date_start != null and issue_date_start != ''">
				AND
				<![CDATA[ d.issue_date >= #{issue_date_start} and d.issue_date <= #{issue_date_end} ]]>
			</if>
	
			<if test="expire_date_start != null and expire_date_start != ''">
				AND
				<![CDATA[ d.expiry_date >= #{expire_date_start} and d.expiry_date <= #{expire_date_end} ]]>
			</if>
			
			<if test="device_sn != null and device_sn != ''">
				AND
		<![CDATA[ d.device_sn = #{device_sn} ]]>
			</if>
			
			<if test="device_sn_type_id != null and device_sn_type_id != ''">
				AND
		<![CDATA[ d.device_sn_type_id = #{device_sn_type_id} and d.device_sn_type_group = #{device_sn_type_group} ]]>
			</if>
			
			<if test="device_type != null and device_type != ''">
				AND
		<![CDATA[ d.device_type = #{device_type} and d.device_type_group = #{device_type_group} ]]>
			</if>
			
			<if test="cert_create_id != null and cert_create_id != ''">
				AND
		<![CDATA[ d.cert_create_id like concat('%', #{cert_create_id}, '%') ]]>
			</if>
			
			) data
		order by data.device_cert_type, data.issue_date desc
		limit #{page}, #{page_per_data}
	</select>
	-->
	<!-- 
	<select id="selectEnrolCertCnt" resultType="int" parameterType="deviceAndCertListVO">
		 SELECT count(*)
			FROM ( select *,
	                if(use_yn is null, 'Y', use_yn) 'cert_use_yn'
				FROM DeviceAndCertList
	            ) d
			where d.cert_use_yn = 'Y' and d.device_cert_type != 'M'
			<if test="issue_date_start != null and issue_date_start != ''">
				AND
				<![CDATA[ d.issue_date >= #{issue_date_start} and d.issue_date <= #{issue_date_end} ]]>
			</if>
	
			<if test="expire_date_start != null and expire_date_start != ''">
				AND
				<![CDATA[ d.expiry_date >= #{expire_date_start} and d.expiry_date <= #{expire_date_end} ]]>
			</if>
			
			<if test="device_sn != null and device_sn != ''">
				AND
		<![CDATA[ d.device_sn = #{device_sn} ]]>
			</if>
			
			<if test="device_sn_type_id != null and device_sn_type_id != ''">
				AND
		<![CDATA[ d.device_sn_type_id = #{device_sn_type_id} and d.device_sn_type_group = #{device_sn_type_group} ]]>
			</if>
			
			<if test="device_type != null and device_type != ''">
				AND
		<![CDATA[ d.device_type = #{device_type} and d.device_type_group = #{device_type_group} ]]>
			</if>
			
			<if test="cert_create_id != null and cert_create_id != ''">
				AND
		<![CDATA[ d.cert_create_id like concat('%', #{cert_create_id}, '%') ]]>
			</if>
	</select>
	 -->
	 
	<select id="selectEnrolCertList" resultType="map" parameterType="deviceAndCertListVO">
		<![CDATA[
		SELECT data.*
		FROM (
			SELECT
				d.device_id,
				c.cert_id,
				(SELECT code_description FROM code WHERE code_id = d.device_type) as device_type_descrption,
				d.obu_rsu_id,
				d.device_user,
				d.car_number,
				d.device_type,
				(SELECT code_description FROM code WHERE code_id = d.device_id_type AND code_group_id = d.device_id_type_group) as device_sn_type_description,
				d.device_sn,
				CONVERT_TZ(str_to_date(c.issue_date, '%a, %d %b %Y %T GMT'), '+00:00', '+09:00') as 'issue_date', 
				CONVERT_TZ(str_to_date(c.expiry_date, '%a, %d %b %Y %T GMT'), '+00:00', '+09:00') as 'expiry_date',
	            if(c.issue_date is null, 0,1) as 'orderby',
	            c.use_yn
			FROM 
				devices d left join certificationList c on d.device_id = c.device_id
			WHERE
				d.use_yn = 'Y'
			) data
		WHERE 1=1
		]]>
		<if test="issue_date_start != null and issue_date_start != ''">
			AND data.issue_date BETWEEN #{issue_date_start} AND #{issue_date_end}
		</if>
		<if test="expire_date_start != null and expire_date_start != ''">
			AND data.expiry_date BETWEEN #{expire_date_start} AND #{expire_date_end}
		</if>
		<if test="expire_date_start != null and expire_date_start != ''">
			AND data.expiry_date BETWEEN #{expire_date_start} AND #{expire_date_end}
		</if>
		<if test="device_type != null and device_type != ''">
			AND data.device_type = #{device_type}
		</if>
		<if test="device_user != null and device_user != ''">
			AND data.device_user LIKE CONCAT('%',#{device_user},'%')
		</if>
		<if test="obu_rsu_id != null and obu_rsu_id != ''">
			AND data.obu_rsu_id LIKE CONCAT('%',#{obu_rsu_id},'%')
		</if>
		ORDER BY data.orderby, data.issue_date desc, data.device_id desc
		limit #{page}, #{page_per_data}
	</select>
	
	<select id="selectEnrolCertCnt" resultType="int" parameterType="deviceAndCertListVO">
		<![CDATA[
		 SELECT count(*)
			FROM (
				SELECT
					d.device_id,
					c.cert_id,
					(SELECT code_description FROM code WHERE code_id = d.device_type) as device_type_descrption,
					d.obu_rsu_id,
					d.device_user,
					d.car_number,
					d.device_type,
					(SELECT code_description FROM code WHERE code_id = d.device_id_type AND code_group_id = d.device_id_type_group) as device_sn_type_description,
					d.device_sn,
					CONVERT_TZ(str_to_date(c.issue_date, '%a, %d %b %Y %T GMT'), '+00:00', '+09:00') as 'issue_date', 
					CONVERT_TZ(str_to_date(c.expiry_date, '%a, %d %b %Y %T GMT'), '+00:00', '+09:00') as 'expiry_date',
		            if(c.issue_date is null, 0,1) as 'orderby',
		            c.use_yn
				FROM 
					devices d left join certificationList c on d.device_id = c.device_id
				WHERE
					d.use_yn = 'Y'
				) data
			WHERE 1=1
			]]>
		<if test="issue_date_start != null and issue_date_start != ''">
			AND data.issue_date BETWEEN #{issue_date_start} AND #{issue_date_end}
		</if>
		<if test="expire_date_start != null and expire_date_start != ''">
			AND data.expiry_date BETWEEN #{expire_date_start} AND #{expire_date_end}
		</if>
		<if test="expire_date_start != null and expire_date_start != ''">
			AND data.expiry_date BETWEEN #{expire_date_start} AND #{expire_date_end}
		</if>
		<if test="device_type != null and device_type != ''">
			AND data.device_type = #{device_type}
		</if>
		<if test="device_user != null and device_user != ''">
			AND data.device_user LIKE CONCAT('%',#{device_user},'%')
		</if>
		<if test="obu_rsu_id != null and obu_rsu_id != ''">
			AND data.obu_rsu_id LIKE CONCAT('%',#{obu_rsu_id},'%')
		</if>
	</select>
	
	<!-- 발급 수량 -->
	 <select id="selectIssueCertCnt" resultType="int" parameterType="deviceAndCertListVO">
		<![CDATA[
		SELECT count(*)
		FROM (
			SELECT
				d.device_id,
				c.cert_id,
				(SELECT code_description FROM code WHERE code_id = d.device_type) as device_type_descrption,
				d.obu_rsu_id,
				d.device_user,
				d.car_number,
				d.device_type,
				(SELECT code_description FROM code WHERE code_id = d.device_id_type AND code_group_id = d.device_id_type_group) as device_sn_type_description,
				d.device_sn,
				CONVERT_TZ(str_to_date(c.issue_date, '%a, %d %b %Y %T GMT'), '+00:00', '+09:00') as 'issue_date', 
				CONVERT_TZ(str_to_date(c.expiry_date, '%a, %d %b %Y %T GMT'), '+00:00', '+09:00') as 'expiry_date',
	            if(c.issue_date is null, 0,1) as 'orderby',
	            c.use_yn
			FROM 
				devices d left join certificationList c on d.device_id = c.device_id
			WHERE
				d.use_yn = 'Y'
		) data
		WHERE data.use_yn = 'Y'
		]]>
		<if test="issue_date_start != null and issue_date_start != ''">
			AND data.issue_date BETWEEN #{issue_date_start} AND #{issue_date_end}
		</if>
		<if test="expire_date_start != null and expire_date_start != ''">
			AND data.expiry_date BETWEEN #{expire_date_start} AND #{expire_date_end}
		</if>
		<if test="expire_date_start != null and expire_date_start != ''">
			AND data.expiry_date BETWEEN #{expire_date_start} AND #{expire_date_end}
		</if>
		<if test="device_type != null and device_type != ''">
			AND data.device_type = #{device_type}
		</if>
		<if test="device_user != null and device_user != ''">
			AND data.device_user LIKE CONCAT('%',#{device_user},'%')
		</if>
		<if test="obu_rsu_id != null and obu_rsu_id != ''">
			AND data.obu_rsu_id LIKE CONCAT('%',#{obu_rsu_id},'%')
		</if>
	</select>
	
 <!-- 페이징 테스트 용(등록)
 <select id="selectEnrolCertList" resultType="map" parameterType="deviceAndCertListVO">
	<![CDATA[	]]>

		select data.*
		from (select 
				'Y' as 'mapping', 
				device_id,
				device_sn,
				create_date as 'issue_date',
				'2023-01-12' as 'expiry_date',
				create_date as 'device_create_date',
				modify_date as 'device_modify_date',
				uuid() as 'cert_id'
			from devices) data
		order by data.device_id asc
		limit #{page}, #{page_per_data}
	</select>
	<select id="selectEnrolCertCnt" resultType="map" parameterType="deviceAndCertListVO">
		select count(*) as 'totalCnt', TRUNCATE(count(*) / ${page_per_data}, 0) + 1 as 'totalPageCnt'
		from devices
	</select>
 -->
 <!-- 페이징 테스트 용(보안)
 <select id="selectMakeCertList" resultType="map" parameterType="deviceAndCertListVO">
	<![CDATA[	]]>

		select data.*
		from (select 
				'Y' as 'mapping', 
				device_id,
				device_sn,
				create_date as 'issue_date',
				'2023-01-12' as 'expiry_date',
				create_date as 'device_create_date',
				modify_date as 'device_modify_date',
				uuid() as 'cert_id'
			from devices) data
		order by data.device_id asc
		limit #{page}, #{page_per_data}
	</select>
	<select id="selectMakeCertCnt" resultType="map" parameterType="deviceAndCertListVO">
		select count(*) as 'totalCnt', TRUNCATE(count(*) / ${page_per_data}, 0) + 1 as 'totalPageCnt'
		from devices
	</select>
 -->


<!-- 	<select id="selectId" resultType="String">
		select concat(replace(uuid(), '-', ''), 
			year(now()) + month(now()) + day(now()) + hour(now()) + minute(now()) + second(now()) + microsecond(now(6)));
	</select>
	-->
	<select id="selectId" resultType="String">
		select replace(uuid(), '-', '');
	</select>
	
	<insert id="insertCert" parameterType="certificationVO">
		insert into certifications(cert_id, device_id, create_id, 
			cert_state, cert_state_group_id, 
			expiry_date, issue_date, 
			cert_type, cert_type_group, 
			create_date, modify_date)
		values(#{cert_id}, #{device_id}, #{create_id}, 
			#{cert_state}, #{cert_state_group_id}, 
			#{expiry_date}, #{issue_date}, 
			#{cert_type}, #{cert_type_group}, 
			now(), now())
	</insert>
	
	<insert id="insertCertKey" parameterType="certificatesKeyVO">
		insert into certificatesKey(cert_enrol_id, cert_sec_id, 
			request_hash, public_key, use_yn, create_date, modify_date, device_id) 
		values(#{cert_enrol_id}, #{cert_sec_id}, 
			#{request_hash}, #{public_key}, 'Y', now(), now(), #{device_id})
			
			
		<selectKey resultType="long" keyProperty="seq" order="AFTER">
		    SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>



	<select id="selectCert" resultType="map" parameterType="certificationVO">
		select *
		from DeviceAndCertList
		where <![CDATA[ cert_id = #{cert_id} and device_id = #{device_id} and use_yn = 'Y' ]]>
	</select>



	<update id="deleteCertification" parameterType="String">
		update certificatesKey
		set use_yn = 'N'
		where seq = #{0}
	</update>


<!--	################################################################################	-->

	<!-- 인증서 목록 조회 -->
	<select id="selectCertList" resultType="egovMap" parameterType="certificationVO">
		SELECT *
		FROM
			(SELECT
				@rownum:=@rownum+1 as RowNum
				,c.cert_id
		        ,c.request_hash
		        ,c.public_key
		        ,c.device_id
		        ,d.device_sn
		        ,c.create_id
		        ,c.cert_state
		        ,c.cert_state_group_id
		        ,c.expiry_date
		        ,c.device_type
		        ,c.device_type_group
		        ,c.cert_type
		        ,c.cert_type_group
		        ,c.create_date
		        ,c.modify_date
			FROM certifications c
		    	JOIN devices d
		    	ON c.device_id = d.device_id
			WHERE 1=1
			
			<if test="device_type != null and device_type != ''">
			AND
				c.device_type = #{device_type}
			</if>
			
			<if test="device_type_group != null and device_type_group != ''">
			AND
				c.device_type_group = #{device_type_group}
			</if>
			
			<if test="device_sn != null and device_sn != ''">
			AND
				d.device_sn LIKE '%' || #{device_sn} || '%'
			</if>
			
			<if test="start_time != null and start_time != '' and end_time != null and end_time != ''">
			AND
				c.create_date BETWEEN #{start_time} AND #{end_time}
			</if>
			
			<if test="cert_type != null and cert_type != ''">
			AND
				c.cert_type = #{cert_type}
			</if>
			
			<if test="cert_type_group != null and cert_type_group != ''">
			AND
				c.cert_type_group = #{cert_type_group}
			</if>
			
			<if test="cert_state != null and cert_state != ''">
			AND
				c.cert_state = #{cert_state}
			</if>
			
			<if test="cert_state_group_id != null and cert_state_group_id != ''">
			AND
				c.cert_state_group_id = #{cert_state_group_id}
			</if>
			
			) data
		WHERE
			data.RowNum BETWEEN ((#{page} - 1) * #{page_per_data}) + 1 AND (#{page_per_data} + #{page}/)
		ORDER BY
			data.RowNum
	</select>
	
	<!-- 인증서 목록 Count -->
	<select id="selectCertListCount" resultType="int" parameterType="certificationVO">
		SELECT COUNT(*)
		FROM certifications c
		JOIN devices d
		ON c.device_id = d.device_id
		WHERE 1=1
		
		<if test="device_type != null and device_type != ''">
		AND
			c.device_type = #{device_type}
		</if>
		
		<if test="device_type_group != null and device_type_group != ''">
		AND
			c.device_type_group = #{device_type_group}
		</if>
		
		<if test="device_sn != null and device_sn != ''">
		AND
			d.device_sn LIKE '%' || #{device_sn} || '%'
		</if>
		
		<if test="start_time != null and start_time != '' and end_time != null and end_time != ''">
		AND
			c.create_date BETWEEN #{start_time} AND #{end_time}
		</if>
		
		<if test="cert_type != null and cert_type != ''">
		AND
			c.cert_type = #{cert_type}
		</if>
		
		<if test="cert_type_group != null and cert_type_group != ''">
		AND
			c.cert_type_group = #{cert_type_group}
		</if>
		
		<if test="cert_state != null and cert_state != ''">
		AND
			c.cert_state = #{cert_state}
		</if>
		
		<if test="cert_state_group_id != null and cert_state_group_id != ''">
		AND
			c.cert_state_group_id = #{cert_state_group_id}
		</if>
			
	</select>
	
	<!-- 인증서 상세 -->
	<select id="selectCertInfo" resultType="certificationVO" parameterType="certificationVO">
		SELECT
			c.cert_id
			,c.request_hash
			,c.public_key
			,c.device_id
			,d.device_sn
			,c.create_id
			,c.cert_state
			,c.cert_state_group_id
			,c.expiry_date
			,c.device_type
			,c.device_type_group
			,c.cert_type
			,c.cert_type_group
			,c.create_date
			,c.modify_date
		FROM certifications c
		JOIN devices d
		ON c.device_id = d.device_id
		WHERE c.cert_id = #{cert_id}
	</select>
	
	<!-- 인증서 등록 -->
	<insert id="insertCertification" parameterType="certificationVO">
		INSERT INTO certification
		SET request_hash = #{request_hash}
			,public_key = #{public_key}
			,device_id = #{device_id}
			,create_id = #{create_id}
			,cert_state = #{cert_state}
			,cert_state_group_id = #{cert_state_group_id}
			,expiry_date = #{expiry_date}
			,device_type = #{device_type}
			,device_type_group = #{device_type_group}
			,cert_type = #{cert_type}
			,cert_type_group = #{cert_type_group}
			,create_date = now()
	</insert>
	
	<!-- 인증서 수정 -->
	<update id="updateDevice" parameterType="deviceVO">
	
		<if test="cert_id != null and cert_id != ''">
			UPDATE certification
			SET modify_date = now()
			
				<if test="request_hash != null and request_hash != ''">
					,request_hash = #{request_hash}
				</if>
				
				<if test="public_key != null and public_key != ''">
					,public_key = #{public_key}
				</if>
				
				<if test="device_id != null and device_id != ''">
					,device_id = #{device_id}
				</if>
				
				<if test="cert_state != null and cert_state != ''">
					,cert_state = #{cert_state}
				</if>
				
				<if test="cert_state_group_id != null and cert_state_group_id != ''">
					,cert_state_group_id = #{cert_state_group_id}
				</if>
				
				<if test="expiry_date != null and expiry_date != ''">
					,expiry_date = #{expiry_date}
				</if>
				
				<if test="device_type != null and device_type != ''">
					,device_type = #{device_type}
				</if>
				
				<if test="device_type_group != null and device_type_group != ''">
					,device_type_group = #{device_type_group}
				</if>
				
				<if test="cert_type != null and cert_type != ''">
					,cert_type = #{cert_type}
				</if>
				
				<if test="cert_type_group != null and cert_type_group != ''">
					,cert_type_group = #{cert_type_group}
				</if>
				
			WHERE cert_id = {#cert_id}
		</if>
		
	</update>
	
	<!-- 최근 4년 인증서 현황 -->
	<select id="certCountYear" resultType="egovMap" parameterType="int">
		select
			year(modify_date) as year
		    ,cert_type_id
		    ,cert_type_group
		    ,cert_type_descrtion
		    ,count(*) as total
		from CertificationList
		where year(modify_date) = #{year}
		group by year, cert_type_id;
	</select>


</mapper>